name: Main workflow

on:
  workflow_call:
    inputs:
      OUTPUT_NAME:
        required: true
        type: string
      OUTPUT_EXT:
        required: false
        type: string
        default: 'txt'
      OUTPUT_APPEND_VERSION:
        required: false
        type: boolean
        default: false
      OUTPUT_APPEND_BUILD_NUMBER:
        required: false
        type: boolean
        default: false

permissions:
  contents: write

jobs:
  update-of-file:
    name: Creation of the output file
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
        
      - name: Read and increment build number
        id: increment
        run: |
          # file with the build number
          FILE="BUILD"

          # make sure, file exists
          if [ ! -f "$FILE" ]; then
            echo "0" > $FILE
          fi

          # read number, increment by 1 and write in file
          BUILD_NUMBER=$(cat $FILE)
          NEW_BUILD_NUMBER=$((BUILD_NUMBER + 1))
          echo $NEW_BUILD_NUMBER > $FILE

          # make new value available
          echo "new_build_number=$NEW_BUILD_NUMBER" >> $GITHUB_ENV

      # Here comes the magic of building...
      # That's just for testing, replace with actual building process
      - name: Create output file
        run: |
          echo 'Test' > mynewfile
          date >> mynewfile
        
      - name: Upload build file
        uses: actions/upload-artifact@v4
        with:
          name: build-file
          path: BUILD

        # Upload build result
      - name: Upload generated file
        uses: actions/upload-artifact@v4
        with:
          name: output-file
          path: mynewfile

  commit-and-push:
    name: Commit and push output files
    needs: update-of-file
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2

      - name: Download build file
        uses: actions/download-artifact@v4
        with:
          name: build-file

      - name: Download generated file
        uses: actions/download-artifact@v4
        with:
          name: output-file

        # build requested filename
      - name: Get version information from version file
        run: |
          VER=$(cat VERSION)
          echo "VERSION=$VER" >> $GITHUB_ENV

      - name: set file name
        run: echo "FILENAME=${{ inputs.OUTPUT_NAME }}" >> $GITHUB_ENV

      - name: Append version information to file name, if requested
        if: ${{ inputs.OUTPUT_APPEND_VERSION }}
        run: echo "FILENAME=${{ env.FILENAME }}-${{ env.VERSION }}" >> $GITHUB_ENV

      - name: Append build number to file name, if requested
        if: ${{ inputs.OUTPUT_APPEND_BUILD_NUMBER }}
        run: echo "FILENAME=${{ env.FILENAME }}-b${{ github.run_number }}" >> $GITHUB_ENV

      - name: Append file extension to file name
        run: echo "FILENAME=${{ env.FILENAME }}.${{ inputs.OUTPUT_EXT }}" >> $GITHUB_ENV

      - name: Write filename in OUTPUTFILE, so we know which file to release / upload / do whatever
        run: echo $FILENAME > OUTPUTFILE

      - name: Rename output file before commit
        run: mv mynewfile $FILENAME

      - name: Commit and Push files
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          git config --global user.name "sajde"
          git config --global user.email "116970472+sajde@users.noreply.github.com"
          git add BUILD
          git add OUTPUTFILE
          git add $FILENAME
          git commit -m "updated files"
          git push
